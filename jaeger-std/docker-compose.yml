version: '3'

# https://jeremyxu2010.github.io/2018/07/%E7%A0%94%E7%A9%B6%E8%B0%83%E7%94%A8%E9%93%BE%E8%B7%9F%E8%B8%AA%E6%8A%80%E6%9C%AF%E4%B9%8Bjaeger/

#       ES_SERVER_URLS: http://${MY_HOST_IP:-127.0.0.1}:9200

# Guide:
#
#  1. mkdir -p $HOME/data/voxr-data/jaeger/esdata
#  2. docker network create voxr_app_net
#  3. docker-compose up -d
#  4. open http://localhost:9420 for example-hotrod, click something
#     to test the Jaeger is ready for collecting anything.
#  5. open http://localhost:16686 to take a look the jaeger ui pane.
#  6. USES JAEGER API ENTRYPOINT: http://localhost:9411
#
# https://www.jaegertracing.io/docs/1.17/getting-started/
# https://www.jaegertracing.io/docs/1.17/deployment/
# https://github.com/jaegertracing/jaeger/blob/master/cmd/all-in-one/Dockerfile
# https://github.com/jaegertracing/jaeger/blob/master/scripts/travis/build-all-in-one-image.sh
# https://hub.docker.com/r/jaegertracing/all-in-one
# https://github.com/jaegertracing/jaeger/blob/master/examples/hotrod/README.md
# https://medium.com/opentracing/take-opentracing-for-a-hotrod-ride-f6e3141f7941
#

# Troubles:
#
# When you got some errors like:
#
# ERROR: for jaeger-std_elasticsearch_1  Cannot create container for service elasticsearch: failed to mount local volume: mount /data/voxr-data/jaeger/esdata:/var/lib/docker/volumes/jaeger-std_esdata/_data, flags: 0x1000: no such file or directory
#
# ERROR: for elasticsearch  Cannot create container for service elasticsearch: failed to mount local volume: mount /data/voxr-data/jaeger/esdata:/var/lib/docker/volumes/jaeger-std_esdata/_data, flags: 0x1000: no such file or directory
# ERROR: Encountered errors while bringing up the project.
#
# Try enlarge the docker resources settings.
# As an advice, the docker engine shoule be invoked 4GB Memory
# and 1G/2G+ Swap space, and 4 core CPU is better.
#
# For more information, browse at: https://github.com/docker/compose/issues/3927#issuecomment-245948736
#

services:

  jaeger-collector:
    image: jaegertracing/jaeger-collector
    restart: always
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
    ports:
      - "14267:14267"
      - "14268:14268"
      - "9411:9411"
    depends_on:
      - elasticsearch
    networks:
      - default
      - voxr_app_net

  jaeger-query:
    image: jaegertracing/jaeger-query
    restart: always
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
    ports:
      - "16686:16686"
    depends_on:
      - elasticsearch
    networks:
      - default
      - voxr_app_net

  jaeger-agent:
    image: jaegertracing/jaeger-agent
    restart: always
    # command: --collector.host-port=jaeger-collector:14267
    # command: --reporter.grpc.host-port=jaeger-collector.jaeger-infra.svc:14250
    command: --reporter.grpc.host-port=jaeger-collector:14250
    environment:
      JAEGER_AGENT_HOST: jaeger-agent
      JAEGER_AGENT_PORT: '6831'
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778/tcp"
    depends_on:
      - jaeger-collector
    networks:
      - default
      - voxr_app_net



  elasticsearch:
    image: elasticsearch
    command: -Enode.name=jaegerESNode
    restart: always
    volumes:
      - "esdata:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
    networks:
      - default
      - voxr_app_net

  jaeger-spark-dependencies:
    image: jaegertracing/spark-dependencies
    restart: always
    environment:
      STORAGE: elasticsearch
      ES_NODES: http://elasticsearch:9200
      ES_NODES_WAN_ONLY: 'true'
      JAVA_OPTS: -Dspark.testing.memory=481859200
    depends_on:
      - elasticsearch
    networks:
      - default
      - voxr_app_net

  example-hotrod:
    image: jaegertracing/example-hotrod
    restart: always
    # restart: on-failure
    #command: all --jaeger-agent.host-port=jaeger-agent:6831 --verbose
    environment:
      JAEGER_AGENT_HOST: jaeger-agent
      JAEGER_AGENT_PORT: '6831'
    ports:
      - "9420-9423:8080-8083"
    depends_on:
      - jaeger-agent
    networks:
      - default
      - voxr_app_net


volumes:
  esdata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${DOCKER_DATA:-/home/hz/data/voxr-data}/jaeger/esdata"

networks:
  voxr_app_net:
    external: true
